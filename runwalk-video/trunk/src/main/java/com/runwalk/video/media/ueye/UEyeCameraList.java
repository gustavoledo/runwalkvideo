package com.runwalk.video.media.ueye;

import com.sun.jna.Structure;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class UEyeCameraList extends Structure {
	/// Conversion Error : ULONG
	public int dwCount;
	/// C type : UEYE_CAMERA_INFO[1]
	public UEyeCameraInfo[] uci;
	
	public UEyeCameraList() {
		this(new UEyeCameraInfo[(1)]);
	}
	
	/// @param uci C type : UEYE_CAMERA_INFO[1]
	public UEyeCameraList(UEyeCameraInfo uci[]) {
		this.uci = uci;
	}
	
	protected ByReference newByReference() { 
		return new ByReference(); 
	}
	
	protected ByValue newByValue() { 
		return new ByValue(); 
	}
	
	protected UEyeCameraList newInstance() { 
		return new UEyeCameraList(); 
	}
	
	public static class ByReference extends UEyeCameraList implements Structure.ByReference {
		
	}
	
	public static class ByValue extends UEyeCameraList implements Structure.ByValue {
		// create a struct with just one camera info entry
		public ByValue(int listSize) {
			super(createArguments(listSize));		
		}
		
		/**
		 * {@link UEyeCameraInfo} array size for the default constructor is set to 2.
		 */
		public ByValue() {
			this(2);
		}
	
		/**
		 * Create an array of new {@link UEyeCameraInfo} instances with the given size.
		 * @param listSize The size of the array to create
		 * 
		 * @return The created array
		 */
		private static UEyeCameraInfo[] createArguments(int listSize) {
			UEyeCameraInfo[] result = new UEyeCameraInfo[listSize];
			for(int i = 0; i < listSize; i++) {
				result[i] = new UEyeCameraInfo();
			}
			return result;
		}
		
	}
}
