package com.runwalk.video.gui.mediaplayer;

import java.awt.Dimension;
import java.awt.Frame;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

import javax.swing.ActionMap;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JLabel;

import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.netbeans.lib.awtextra.AbsoluteConstraints;
import org.netbeans.lib.awtextra.AbsoluteLayout;

import com.runwalk.video.RunwalkVideoApp;

@SuppressWarnings("serial")
public class CameraDialog extends JDialog {

	// Variables declaration - do not modify
	private JComboBox captureDeviceComboBox;
	// End of variables declaration

	/** Creates new form CameraDialog */
	public CameraDialog(Frame parent) {
		super(parent, true);
		initComponents();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	private void initComponents() {
		addWindowListener(new WindowAdapter() {

			@Override
			public void windowClosed(WindowEvent arg0) {
				System.exit(1);
			}
			
		});
		ResourceMap resourceMap = RunwalkVideoApp.getApplication().getContext().getResourceMap(CameraDialog.class);
		setTitle(resourceMap.getString("captureDeviceDlg.title")); // NOI18N
		setResizable(false);
		getContentPane().setLayout(new AbsoluteLayout());
		
		captureDeviceComboBox = new JComboBox();
//		captureDeviceComboBox.setFont(RunwalkVideoApp.MAIN_FONT);
		getContentPane().add(captureDeviceComboBox, new AbsoluteConstraints(10, 30, 250, -1));

		JLabel captureDeviceLabel = new JLabel(resourceMap.getString("captureDeviceLabel.text")); // NOI18N
		getContentPane().add(captureDeviceLabel, new AbsoluteConstraints(10, 10, 210, -1));

		ActionMap actionMap = RunwalkVideoApp.getApplication().getContext().getActionMap(CameraDialog.class, this);

		JButton cancelButton = new JButton(RunwalkVideoApp.getApplication().getApplicationActionMap().get("exit")); // NOI18N
//		cancelButton.setFont(RunwalkVideoApp.MAIN_FONT);
		getContentPane().add(cancelButton, new AbsoluteConstraints(10, 60, 90, 25));
		JButton refreshButton = new JButton(actionMap.get("refreshCaptureDevices")); // NOI18N
//		refreshButton.setFont(RunwalkVideoApp.MAIN_FONT);
		getContentPane().add(refreshButton, new AbsoluteConstraints(105, 60, 90, 25));
		JButton okButton = new JButton(actionMap.get("dismissDialog"));
//		okButton.setFont(RunwalkVideoApp.MAIN_FONT);
		getContentPane().add(okButton, new AbsoluteConstraints(200, 60, 60, 25));
		getRootPane().setDefaultButton(okButton);

		refreshCaptureDevices();
		setPreferredSize(new Dimension(275, 125));
		pack();
	}

	@Action
	public void dismissDialog() {
		setVisible(false);
		int selectedIndex = captureDeviceComboBox.getSelectedIndex();
		RunwalkVideoApp.getApplication().getPlayer().setCaptureDevice(selectedIndex);
	}
	
    @Action
    public void refreshCaptureDevices() {
    	Object[] captureDevices = RunwalkVideoApp.getApplication().getPlayer().queryCaptureDevices();
    	captureDeviceComboBox.setModel(new DefaultComboBoxModel(captureDevices));
    }

}
